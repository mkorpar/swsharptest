#!/bin/bash

trap control_c SIGINT

cleanup()
{
    rm -f $tout
    rm -f $out
}

control_c()
# run if user hits control-c
{
    cleanup
    exit $?
}

if [ $# -lt 2 ]
then
    echo "usage: $0 <database> [swsharpdb args...]"
    exit -1
fi

db1=$1
db2=$2

DIR=$(dirname $0)

time=/usr/bin/time

swsharpdb="$DIR/../swsharp/bin/swsharpdb --outfmt bm8 --max-aligns 500 --evalue 10"
blastp="$DIR/../ncbi-blast-2.2.27+/bin/blastp -outfmt 6 -max_target_seqs 500 -evalue 10 -gapopen 10 -gapextend 2 -matrix BLOSUM62 -num_threads 4"
psiblast="$DIR/../ncbi-blast-2.2.27+/bin/psiblast -outfmt 6 -max_target_seqs 500 -evalue 10 -gapopen 10 -gapextend 2 -matrix BLOSUM62 -num_threads 4"
gpublast="$DIR/../ncbi-blast-2.2.26+-src/c++/GCC480-Release64/bin/blastp -outfmt 6 -max_target_seqs 500 -evalue 10 -gapopen 10 -gapextend 2 -matrix BLOSUM62 -gpu T"
blat="$DIR/../blat -prot -out=blast8"

out=$(mktemp)
tout=$(mktemp)

db1len=$(grep ">" $db1 -v | tr -d '[:space:]' |  wc -c)
db2len=$(grep ">" $db2 -v | tr -d '[:space:]' |  wc -c)

printf "%-13s | %-10s %-10s | " "algorithm" "time" "gcups"
echo

$time -o $tout -f "%e" $swsharpdb -i $db1 -j $db2 --out $out > /dev/null 2>&1
if [ $(grep "Command exited with non-zero status"  $tout -c) -eq 1 ]; then 
    t1="nan"
    g1="nan"
else
    t1=$(cat $tout)
    g1=$(echo $db1len $db2len $t1 | awk '{printf "%.2f", ($1 * $2) / ($3 * 1000000000.0)}')
fi

printf "%-13s | %-10s %-10s | " "swsharpdb" $t1 $g1
echo

$time -o $tout -f "%e" $blastp -query $db1 -db $db2 -out $out 
if [ $(grep "Command exited with non-zero status"  $tout -c) -eq 1 ]; then 
    t2="nan"
    g2="nan"
else
    t2=$(cat $tout)
    g2=$(echo $db1len $db2len $t2 | awk '{printf "%.2f", ($1 * $2) / ($3 * 1000000000.0)}')
fi

printf "%-13s | %-10s %-10s | " "blastp" $t2 $g2
echo

$time -o $tout -f "%e" $psiblast -query $db1 -db $db2 -out $out > /dev/null 2>&1
if [ $(grep "Command exited with non-zero status"  $tout -c) -eq 1 ]; then 
    t3="nan"
    g3="nan"
else
    t3=$(cat $tout)
    g3=$(echo $db1len $db2len $t3 | awk '{printf "%.2f", ($1 * $2) / ($3 * 1000000000.0)}')
fi

printf "%-13s | %-10s %-10s | " "psiblast" $t3 $g3
echo

$time -o $tout -f "%e" $gpublast -query $db1 -db $db2 -out $out > /dev/null 2>&1
if [ $(grep "Command exited with non-zero status"  $tout -c) -eq 1 ]; then 
    t4="nan"
    g4="nan"
else
    t4=$(cat $tout)
    g4=$(echo $db1len $db2len $t4 | awk '{printf "%.2f", ($1 * $2) / ($3 * 1000000000.0)}')
fi

printf "%-13s | %-10s %-10s | " "gpublast" $t4 $g4
echo

$time -o $tout -f "%e" $blat $db2 $db1 $out > /dev/null 2>&1
if [ $(grep "Command exited with non-zero status"  $tout -c) -eq 1 ]; then 
    t5="nan"
    g5="nan"
else
    t5=$(cat $tout)
    g5=$(echo $db1len $db2len $t5 | awk '{printf "%.2f", ($1 * $2) / ($3 * 1000000000.0)}')
fi

printf "%-13s | %-10s %-10s | " "ssearch" $t5 $g5
echo

cleanup
