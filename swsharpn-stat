#!/bin/bash

trap control_c SIGINT

cleanup()
{
    rm -f $tout
    rm -f $out
    rm -f $stat
}

control_c()
# run if user hits control-c
{
    cleanup
    exit $?
}

if [ $# -lt 1 ]
then
    echo "usage: $0 <pair list> [swsharpn args...]"
    exit -1
fi

input=$1
shift
args=$@

DIR=$(dirname $0)

time=/usr/bin/time

swsharpn=$DIR/../bin/swsharpn
swsharpout=$DIR/../bin/swsharpout

printf "%-13s %-13s | " "query" "target"
printf "%-20s %-20s %-20s %-10s | " "solve" "find" "recn" "total"
printf "%-10s | " "mem (MB)"
printf "%-14s | " "prunned"
printf "%-21s %-21s | " "start" "end"
printf "%-13s | " "score"
printf "%-13s %-13s %-13s %-13s" "length" "identity" "similarity" "gaps"
echo

out=$(mktemp)
tout=$(mktemp)
stat=$(mktemp)

while read line
do

    in1=$(echo $line | cut -d " " -f 1)
    in2=$(echo $line | cut -d " " -f 2)

    n1=$(basename $in1)
    n2=$(basename $in2)

    echo "processing: " $n1 $n2 1>&2 
    
    dump=$n1"-"$n2

    # measure memory and standard time
    $time -o $tout -f "%e %M" $swsharpn -i $in1 -j $in2 --outfmt dump --out $dump $args > $out
    if [ $? -ne 0 ]; then cleanup; exit -1; fi
    
    time_solve1=$(grep "STOP:src/sw_end_data_gpu.cu" $out | cut -d " " -f 2 | paste -sd ",")
    time_find1=$(grep "STOP:src/sw_find_start_gpu.cu" $out | cut -d " " -f 2 | paste -sd ",")
    time_recn1=$(grep "STOP:src/reconstruct.c" $out | cut -d " " -f 2 | paste -sd ",")
    time_total1=$(cat $tout | cut -d" " -f1)
    memory=$(echo "scale = 3; $(cat $tout | cut -d " " -f2) / 1024.0" | bc)
    pruned=$(grep "Pruned percentage" $out | cut -d " " -f 4 | paste -sd ",")

    $swsharpout -i $dump --outfmt 'stat' --out $stat
    if [ $? -ne 0 ]; then cleanup; exit -1; fi
    
    query_length=$(grep "length = " $stat | head -n 1 | awk '{print $4}')
    target_length=$(grep "length = " $stat | tail -n 1 | awk '{print $4}')
    length=$(grep "Length" $stat | cut -d " " -f 3)
    identity=$(grep "Identity" $stat | awk '{print $3}' | cut -d "/" -f 1 )
    similarity=$(grep "Similarity" $stat | awk '{print $3}' | cut -d "/" -f 1)
    gap=$(grep "Gaps" $stat | awk '{print $3}' | cut -d "/" -f 1)
    scor=$(grep "Score" $stat | cut -d " " -f 3)
    query_start=$(grep "Query" $stat | cut -d " " -f 3 | tr -d "(,")
    query_end=$(grep "Query" $stat | cut -d " " -f 4 | tr -d ")")
    target_start=$(grep "Target" $stat | cut -d " " -f 3 | tr -d "(,")
    target_end=$(grep "Target" $stat | cut -d " " -f 4 | tr -d ")")

    echo $query_length $target_length
    echo
    
done < $input

cleanup
